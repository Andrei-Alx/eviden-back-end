server.port=8002

# Actuator Web port
management.server.port=8102
management.endpoint.health.show-details=always

#spring.datasource.url=jdbc:mysql://localhost:3308/round_db
#spring.datasource.username=root
#spring.datasource.password=root
spring.datasource.url=jdbc:mysql://cloud-sql-proxy-round:3308/round_db
spring.datasource.username=myuser
spring.datasource.password=mypassword
#When database is put on update it will keep all lobby information which currently cant be assigned a finished status so you cant filter them.
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.show-sql=true
springdoc.api-docs.resolve-schema-properties=true
springdoc.swagger-ui.path=/swagger

# Kafka
spring.kafka.bootstrap-servers=localhost:29092
spring.cloud.stream.kafka.binder.configuration.key.serializer=org.apache.kafka.common.serialization.UUIDSerializer
spring.cloud.stream.kafka.binder.configuration.key.deserializer=org.apache.kafka.common.serialization.UUIDDeserializer
spring.cloud.stream.kafka.binder.configuration.reconnect.backoff.ms=5000

# Bind the functions to the framework
spring.cloud.function.definition=handleGameCreated;handleGameStarted;\
                                    produceRoundCreated;produceRoundStarted;produceRoundEnded;producePlayerPhaseStarted;\
                                    producePlayerPhaseEnded;producePlayerRoundEnded;producePlayerCardsDistributed;producePlayerLikedCard;\
                                    producePlayerDislikedCard;producePlayerSelectedCards;producePlayerResultDetermined;\
                                    producePlayerResultIndeterminate;\
                                    \
                                    handleLobbyCreated;handlePlayerJoined;handlePlayerQuit;\
                                    \
                                    produceCardSetRequest;handleCardSet;


# Bind the functions with their input/output to the topic
spring.cloud.stream.bindings.handleGameCreated-in-0.destination=game-created-topic
spring.cloud.stream.bindings.handleGameStarted-in-0.destination=game-started-topic

spring.cloud.stream.bindings.produceRoundCreated-out-0.destination=round-created-topic
spring.cloud.stream.bindings.produceRoundStarted-out-0.destination=round-started-topic
spring.cloud.stream.bindings.produceRoundEnded-out-0.destination=round-ended-topic
spring.cloud.stream.bindings.producePlayerPhaseStarted-out-0.destination=player-phase-started-topic
spring.cloud.stream.bindings.producePlayerPhaseEnded-out-0.destination=player-phase-ended-topic
spring.cloud.stream.bindings.producePlayerRoundEnded-out-0.destination=player-round-ended-topic
spring.cloud.stream.bindings.producePlayerCardsDistributed-out-0.destination=player-cards-distributed-topic
spring.cloud.stream.bindings.producePlayerLikedCard-out-0.destination=player-liked-card-topic
spring.cloud.stream.bindings.producePlayerDislikedCard-out-0.destination=player-disliked-card-topic
spring.cloud.stream.bindings.producePlayerSelectedCards-out-0.destination=player-selected-cards-topic
spring.cloud.stream.bindings.producePlayerResultDetermined-out-0.destination=player-result-determined-topic
spring.cloud.stream.bindings.producePlayerResultIndeterminate-out-0.destination=player-result-indeterminate-topic

spring.cloud.stream.bindings.handleLobbyCreated-in-0.destination=lobby-created-topic
spring.cloud.stream.bindings.handlePlayerJoined-in-0.destination=player-joined-topic
spring.cloud.stream.bindings.handlePlayerQuit-in-0.destination=player-quit-topic

spring.cloud.stream.bindings.produceCardSetRequest-out-0.destination=card-set-request-topic
spring.cloud.stream.bindings.handleCardSet-in-0.destination=card-set-topic


