
stages: # List of stages for jobs, and their order of execution
  - build
  - test
  - release

variables:
  MAVEN_CLI_OPTS: "-s .m2/settings.xml --batch-mode"
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"
  BUILD_IMAGE: "maven:3.9.6-eclipse-temurin-21-alpine"
  RELEASE_IMAGE: "docker:dind"
  DOCKER_HOST: "tcp://docker:2375"
  DOCKER_TLS_CERTDIR: ""
  DOCKER_DRIVER: overlay2
  SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
  GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task


# Build and Release API Gateway
build-api-gateway: # This job runs in the build stage, which runs first.
  stage: build
  image: $BUILD_IMAGE
  script:
    - echo "Running API Gateway Build"
    - cd APIGateway
    - mvn install 
    - echo "API Gateway Build complete!"

release-api-gateway:
  stage: release
  image: $RELEASE_IMAGE
  services:
    - name: docker:dind
  before_script:
    - echo $DOCKERHUB_PASSWORD | docker login --username $DOCKERHUB_USERNAME --password-stdin
  script:
    - docker build --pull -t $DOCKERHUB_USERNAME/eviden-api-gateway:$CI_COMMIT_REF_NAME APIGateway/
    - docker push $DOCKERHUB_USERNAME/eviden-api-gateway:$CI_COMMIT_REF_NAME
    - echo "API Gateway Latest Release Pushed to Docker Hub!"
  only: 
   - development
   - main


# Build and Release Card service
build-card-service: # This job runs in the build stage, which runs first.
  stage: build
  image: $BUILD_IMAGE
  script:
    - echo "Running Card Service Build"
    - cd CardService
    - mvn install 
    - echo "Card Service Build Complete!"

###unit-test-card-service: # This job runs in the test stage.
###  stage: test # It only starts when the job in the build stage completes successfully.
###  only: devlope
###  script:
###    - echo "Running unit tests."
###    - cd CardService
###    - ./mvnw test
###    - echo "Card Service Tests complete."
###  allow_failure: true
###
###sonarqube-check-card-service:
###  stage: QC
###  image: maven:3.8.6-jdk-11
###  variables:
###    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar" # Defines the location of the analysis task cache
###    GIT_DEPTH: "0" # Tells git to fetch all the branches of the project, required by the analysis task
###  cache:
###    key: "${CI_JOB_NAME}"
###    paths:
###      - .sonar/cache
###  script:
###    - cd CardService
###    - ./mvnw verify sonar:sonar
###  allow_failure: true
###  only:
###    - develop

release-card-service:
  stage: release
  image: $RELEASE_IMAGE
  services:
    - name: docker:dind
  before_script:
    - echo $DOCKERHUB_PASSWORD | docker login --username $DOCKERHUB_USERNAME --password-stdin
  script:
    - docker build --pull -t $DOCKERHUB_USERNAME/eviden-card-service:$CI_COMMIT_REF_NAME CardService/
    - docker push $DOCKERHUB_USERNAME/eviden-card-service:$CI_COMMIT_REF_NAME
    - echo "Card Service Latest Release Pushed to Docker Hub!"
  only: 
    - main
    - development

# Build and Release Game service
build-game-service: # This job runs in the build stage, which runs first.
  stage: build
  image: $BUILD_IMAGE
  script:
    - echo "Running Game Service Build"
    - cd GameService
    - mvn install 
    - echo "Game Service Build Complete!"

#unit-test-game-service: # This job runs in the test stage.
#  stage: test # It only starts when the job in the build stage completes successfully.
#  script:
#    - echo "Running unit tests."
#    - cd GameService
#    - ./mvnw test
#    - echo "Tests complete."
#
#sonarqube-check-game-service:
#  stage: QC
#  image: maven:3.8.6-jdk-11
#  variables:
#    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar" # Defines the location of the analysis task cache
#    GIT_DEPTH: "0" # Tells git to fetch all the branches of the project, required by the analysis task
#  cache:
#    key: "${CI_JOB_NAME}"
#    paths:
#      - .sonar/cache
#  script:
#    - cd GameService
#    - ./mvnw verify sonar:sonar
#  allow_failure: true
#  only:
#    - develop

releases-game-service:
  stage: release
  image: $RELEASE_IMAGE
  services:
    - name: docker:dind
  before_script:
    - echo $DOCKERHUB_PASSWORD | docker login --username $DOCKERHUB_USERNAME --password-stdin
  script:
    - docker build --pull -t $DOCKERHUB_USERNAME/eviden-game-service:$CI_COMMIT_REF_NAME GameService/
    - docker push $DOCKERHUB_USERNAME/eviden-game-service:$CI_COMMIT_REF_NAME
    - echo "Game Service Latest Release Pushed to Docker Hub!"
  only: 
    - main
    - development

# Build and Release Lobby service
build-lobby-service: # This job runs in the build stage, which runs first.
  stage: build
  image: $BUILD_IMAGE
  script:
    - echo "Running Lobby Service Build"
    - cd LobbyService
    - mvn install
    - echo "Lobby Service Build Complete!"

#unit-test-lobby-service: # This job runs in the test stage.
#  stage: test # It only starts when the job in the build stage completes successfully.
#  script:
#    - echo "Running unit tests."
#    - cd LobbyService
#    - ./mvnw test
#    - echo "Tests complete."
#
#sonarqube-check-lobby-service:
#  stage: QC
#  image: maven:3.8.6-jdk-11
#  variables:
#    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar" # Defines the location of the analysis task cache
#    GIT_DEPTH: "0" # Tells git to fetch all the branches of the project, required by the analysis task
#  cache:
#    key: "${CI_JOB_NAME}"
#    paths:
#      - .sonar/cache
#  script:
#    - cd LobbyService
#    - ./mvnw verify sonar:sonar
#  allow_failure: true
#  only:
#    - develop

release-lobby-service:
  stage: release
  image: $RELEASE_IMAGE
  services:
    - name: docker:dind
  before_script:
    - echo $DOCKERHUB_PASSWORD | docker login --username $DOCKERHUB_USERNAME --password-stdin
  script:
    - docker build --pull -t $DOCKERHUB_USERNAME/eviden-lobby-service:$CI_COMMIT_REF_NAME LobbyService/
    - docker push $DOCKERHUB_USERNAME/eviden-lobby-service:$CI_COMMIT_REF_NAME
    - echo "Lobby Service Latest Release Pushed to Docker Hub!"
  only: 
    - main
    - development

# Build and Release Round service
build-round-service: # This job runs in the build stage, which runs first.
  stage: build
  image: $BUILD_IMAGE
  script:
    - echo "Running Round Service Build"
    - cd RoundService
    - mvn install 
    - echo "Round Service Build Complete!"
#  allow_failure: true

#unit-test-round-service: # This job runs in the test stage.
#  stage: test # It only starts when the job in the build stage completes successfully.
#  script:
#    - echo "Running unit tests."
#    - cd RoundService
#    - ./mvnw test
#    - echo "Tests complete."
#  allow_failure: true
#
#sonarqube-check-round-service:
#  stage: QC
#  image: maven:3.8.6-jdk-11
#  variables:
#    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar" # Defines the location of the analysis task cache
#    GIT_DEPTH: "0" # Tells git to fetch all the branches of the project, required by the analysis task
#  cache:
#    key: "${CI_JOB_NAME}"
#    paths:
#      - .sonar/cache
#  script:
#    - cd RoundService
#    - ./mvnw verify sonar:sonar
#  allow_failure: true
#  only:
#    - develop

release-round-service:
  stage: release
  image: $RELEASE_IMAGE
  services:
    - name: docker:dind
  before_script:
    - echo $DOCKERHUB_PASSWORD | docker login --username $DOCKERHUB_USERNAME --password-stdin
  script:
    - docker build --pull -t $DOCKERHUB_USERNAME/eviden-round-service:$CI_COMMIT_REF_NAME RoundService/
    - docker push $DOCKERHUB_USERNAME/eviden-round-service:$CI_COMMIT_REF_NAME
    - echo "Round Service Latest Release Pushed to Docker Hub!"
  only: 
    - main
    - development  

# Build and Release for GameBFF
build-gamebff: # This job runs in the build stage, which runs first.
  stage: build
  image: $BUILD_IMAGE
  script:
    - echo "Running Build"
    - cd GameAppBFF
    - mvn install
    - echo "Game App BFF Build complete."

#unit-test-gamebff: # This job runs in the test stage.
#  stage: test # It only starts when the job in the build stage completes successfully.
#  script:
#    - echo "Running unit tests."
#    - cd GameAppBFF
#    - ./mvnw test
#    - echo "Tests complete."
#
#sonarqube-check-gamebff:
#  stage: QC
#  image: maven:3.8.6-jdk-11
#  variables:
#    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar" # Defines the location of the analysis task cache
#    GIT_DEPTH: "0" # Tells git to fetch all the branches of the project, required by the analysis task
#  cache:
#    key: "${CI_JOB_NAME}"
#    paths:
#      - .sonar/cache
#  script:
#    - cd GameAppBFF
#    - ./mvnw verify sonar:sonar
#  allow_failure: true
#  only:
#    - develop

release-gamebff-service:
  stage: release
  image: $RELEASE_IMAGE
  services:
    - name: docker:dind
  before_script:
    - echo $DOCKERHUB_PASSWORD | docker login --username $DOCKERHUB_USERNAME --password-stdin
  script:
    - docker build --pull -t $DOCKERHUB_USERNAME/eviden-gamebff-service:$CI_COMMIT_REF_NAME GameAppBFF/
    - docker push $DOCKERHUB_USERNAME/eviden-gamebff-service:$CI_COMMIT_REF_NAME
    - echo "Game App BFF Latest Release Pushed to Docker Hub!"
  only: 
    - main
    - development

# Test code coverage
sonarcloud-check-Cardservice:
  stage: test
  image: $BUILD_IMAGE
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
   - cd CardService
   - mvn verify sonar:sonar -Dsonar.projectKey=$Sonar_Cloud_Project_Key -Dsonar.organization=eviden-dev -Dsonar.host.url=$SONAR_HOST_URL
  only:
    - merge_requests
    - main
    - development
    - Eviden-22
   
sonarcloud-check-Gameservice:
  stage: test
  image: $BUILD_IMAGE
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
   - cd GameService
   
   - mvn verify sonar:sonar -Dsonar.projectKey=$Sonar_Cloud_Project_Key -Dsonar.organization=eviden-dev -Dsonar.host.url=$SONAR_HOST_URL

  only:
    - merge_requests
    - main
    - development

sonarcloud-check-Lobbyservice:
  stage: test
  image: $BUILD_IMAGE
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
   - cd LobbyService 
   - mvn verify sonar:sonar -Dsonar.projectKey=$Sonar_Cloud_Project_Key -Dsonar.organization=eviden-dev -Dsonar.host.url=$SONAR_HOST_URL

  only:
    - merge_requests
    - main
    - development

sonarcloud-check-Roundservice:
  stage: test
  image: $BUILD_IMAGE
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
   - cd RoundService
   - mvn verify sonar:sonar -Dsonar.projectKey=$Sonar_Cloud_Project_Key -Dsonar.organization=eviden-dev -Dsonar.host.url=$SONAR_HOST_URL

  only:
    - merge_requests
    - main
    - development

sonarcloud-check-GameBFF:
  stage: test
  image: $BUILD_IMAGE
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
   - cd GameAppBFF
   - mvn verify sonar:sonar -Dsonar.projectKey=$Sonar_Cloud_Project_Key -Dsonar.organization=eviden-dev -Dsonar.host.url=$SONAR_HOST_URL

  only:
    - merge_requests
    - main
    - development
    - Eviden-22

