stages:          # List of stages for jobs, and their order of execution
  - build
  - test
  - QC


# Tests for Card service
build-card-service:       # This job runs in the build stage, which runs first.
  stage: build
  script:
    - echo "Running Build"
    - cd CardService
    - ./mvnw install -DskipTests
    - echo "Build complete."

unit-test-card-service:   # This job runs in the test stage.
  stage: test    # It only starts when the job in the build stage completes successfully.
  script:
    - echo "Running unit tests."
    - cd CardService
    - ./mvnw test
    - echo "Tests complete."

sonarqube-check-card-service:
  stage: QC
  image: maven:3.8.6-jdk-11
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script: 
    - cd CardService
    - ./mvnw verify sonar:sonar -Pcoverage
  allow_failure: true
  only:
    - develop


# Tests for Game service
build-game-service:       # This job runs in the build stage, which runs first.
  stage: build
  script:
    - echo "Running Build"
    - cd GameService
    - ./mvnw install -DskipTests
    - echo "Build complete."

unit-test-game-service:   # This job runs in the test stage.
  stage: test    # It only starts when the job in the build stage completes successfully.
  script:
    - echo "Running unit tests."
    - cd GameService
    - ./mvnw test
    - echo "Tests complete."

sonarqube-check-game-service:
  stage: QC
  image: maven:3.8.6-jdk-11
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script: 
    - cd GameService
    - sudo ./mvnw verify sonar:sonar -Dsonar.projectKey=s6-rb_spring-23_ehv-s-a-rb04-group3-atos_kafka-prototype_AYbrNdDS1of5T9vMw7RM
  allow_failure: true
  only:
    - develop


# Tests for Lobby service
build-lobby-service:       # This job runs in the build stage, which runs first.
  stage: build
  script:
    - echo "Running Build"
    - cd LobbyService
    - ./mvnw install -DskipTests
    - echo "Build complete."

unit-test-lobby-service:   # This job runs in the test stage.
  stage: test    # It only starts when the job in the build stage completes successfully.
  script:
    - echo "Running unit tests."
    - cd LobbyService
    - ./mvnw test
    - echo "Tests complete."

sonarqube-check-lobby-service:
  stage: QC
  image: maven:3.8.6-jdk-11
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script: 
    - cd LobbyService
    - ./mvnw verify sonar:sonar -Pcoverage
  allow_failure: true
  only:
    - develop


# Tests for Round service
build-round-service:       # This job runs in the build stage, which runs first.
  stage: build
  script:
    - echo "Running Build"
    - cd RoundService
    - ./mvnw install -DskipTests
    - echo "Build complete."
  allow_failure: true

unit-test-round-service:   # This job runs in the test stage.
  stage: test    # It only starts when the job in the build stage completes successfully.
  script:
    - echo "Running unit tests."
    - cd RoundService
    - ./mvnw test
    - echo "Tests complete."
  allow_failure: true

sonarqube-check-round-service:
  stage: QC
  image: maven:3.8.6-jdk-11
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script: 
    - cd RoundService
    - ./mvnw verify sonar:sonar -Pcoverage
  allow_failure: true
  only:
    - develop


# Tests for Round service
build-api-gateway:       # This job runs in the build stage, which runs first.
  stage: build
  script:
    - echo "Running Build"
    - cd ApiGateway
    - ./mvnw install -DskipTests
    - echo "Build complete."


# Tests for AdminBFF
build-adminbff:       # This job runs in the build stage, which runs first.
  stage: build
  script:
    - echo "Running Build"
    - cd AdminAppBFF
    - ./mvnw install -DskipTests
    - echo "Build complete."

unit-test-adminbff:   # This job runs in the test stage.
  stage: test    # It only starts when the job in the build stage completes successfully.
  script:
    - echo "Running unit tests."
    - cd AdminAppBFF
    - ./mvnw test
    - echo "Tests complete."

sonarqube-check-adminbff:
  stage: QC
  image: maven:3.8.6-jdk-11
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script: 
    - cd AdminAppBFF
    - ./mvnw verify sonar:sonar -Pcoverage
  allow_failure: true
  only:
    - develop


# Tests for GameBFF
build-gamebff:       # This job runs in the build stage, which runs first.
  stage: build
  script:
    - echo "Running Build"
    - cd GameAppBFF
    - ./mvnw install -DskipTests
    - echo "Build complete."

unit-test-gamebff:   # This job runs in the test stage.
  stage: test    # It only starts when the job in the build stage completes successfully.
  script:
    - echo "Running unit tests."
    - cd GameAppBFF
    - ./mvnw test
    - echo "Tests complete."

sonarqube-check-gamebff:
  stage: QC
  image: maven:3.8.6-jdk-11
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script: 
    - cd GameAppBFF
    - ./mvnw verify sonar:sonar -Pcoverage
  allow_failure: true
  only:
    - develop