server.port=8004

# Actuator Web port
management.server.port=8104
management.endpoint.health.show-details=always

spring.datasource.url=jdbc:mysql://localhost:3310/gameappbff_db
spring.datasource.username=root
spring.datasource.password=root
#When database is put on update it will keep all lobby information which currently cant be assigned a finished status so you cant filter them.
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
#spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.show-sql=true
springdoc.api-docs.resolve-schema-properties=true
springdoc.swagger-ui.path=/swagger

# Kafka
spring.kafka.bootstrap-servers=localhost:29092
spring.cloud.stream.kafka.binder.configuration.key.serializer=org.apache.kafka.common.serialization.UUIDSerializer
spring.cloud.stream.kafka.binder.configuration.key.deserializer=org.apache.kafka.common.serialization.UUIDDeserializer
spring.cloud.stream.kafka.binder.configuration.reconnect.backoff.ms=5000

# Bind the functions to the framework
spring.cloud.function.definition=handleGameCreated;handleGameStarted;handleGameEnded; \
                                \
                                handlePlayerJoined;handlePlayerQuit;handleLobbyCreated;handleLobbyDeleted; \
                                \
                                handleRoundCreated;handleRoundStarted;handleRoundEnded;handlePlayerPhaseStarted;handlePlayerPhaseEnded; \
                                handlePlayerCardsDistributed;handlePlayerLikedCard;handlePlayerDislikedCard; \
                                handlePlayerSelectedCards;handlePlayerResultDetermined;handlePlayerResultIndeterminate; \
                                \
                                produceCardSetRequest; \
                                \
                                handleCardSet; \
                                \
                                handleFinalResultDetermined;

spring.cloud.stream.kafka.streams.binder.configuration.enable.idempotence=true

# Bind the functions with their input/output to the topic
spring.cloud.stream.bindings.handleGameCreated-in-0.destination=game-created-topic
spring.cloud.stream.bindings.handleGameStarted-in-0.destination=game-started-topic
spring.cloud.stream.bindings.handleGameEnded-in-0.destination=game-ended-topic

spring.cloud.stream.bindings.handlePlayerJoined-in-0.destination=player-joined-topic
spring.cloud.stream.bindings.handlePlayerQuit-in-0.destination=player-quit-topic
spring.cloud.stream.bindings.handleLobbyCreated-in-0.destination=lobby-created-topic
spring.cloud.stream.bindings.handleLobbyDeleted-in-0.destination=lobby-deleted-topic

spring.cloud.stream.bindings.handleRoundCreated-in-0.destination=round-created-topic
spring.cloud.stream.bindings.handleRoundStarted-in-0.destination=round-started-topic
spring.cloud.stream.bindings.handleRoundEnded-in-0.destination=round-ended-topic
spring.cloud.stream.bindings.handlePlayerPhaseStarted-in-0.destination=player-phase-started-topic
spring.cloud.stream.bindings.handlePlayerPhaseEnded-in-0.destination=player-phase-ended-topic
spring.cloud.stream.bindings.handlePlayerCardsDistributed-in-0.destination=player-cards-distributed-topic
spring.cloud.stream.bindings.handlePlayerLikedCard-in-0.destination=player-liked-card-topic
spring.cloud.stream.bindings.handlePlayerDislikedCard-in-0.destination=player-disliked-card-topic
spring.cloud.stream.bindings.handlePlayerSelectedCards-in-0.destination=player-selected-cards-topic
spring.cloud.stream.bindings.handlePlayerResultDetermined-in-0.destination=player-result-determined-topic
spring.cloud.stream.bindings.handlePlayerResultIndeterminate-in-0.destination=player-result-indeterminate-topic

spring.cloud.stream.bindings.produceCardSetRequest-out-0.destination=card-set-request-topic
spring.cloud.stream.bindings.handleCardSet-in-0.destination=card-set-topic

spring.cloud.stream.bindings.handleFinalResultDetermined-in-0.destination=final-result-determined-topic

