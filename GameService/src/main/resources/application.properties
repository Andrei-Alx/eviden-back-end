server.port=8005
# Actuator Web port
management.server.port=8105
management.endpoint.health.show-details=always

#spring.datasource.url=jdbc:mysql://localhost:3312/game_db
#spring.datasource.username=root
#spring.datasource.password=root
spring.datasource.url=jdbc:mysql://172.16.100.11:3306/game_db
spring.datasource.username=myuser
spring.datasource.password=mypassword
#When database is put on update it will keep all lobby information which currently cant be assigned a finished status so you cant filter them.
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.show-sql=true
springdoc.api-docs.resolve-schema-properties=true
springdoc.swagger-ui.path=/swagger

# Kafka
spring.kafka.bootstrap-servers=localhost:29092
spring.cloud.stream.kafka.binder.configuration.key.serializer=org.apache.kafka.common.serialization.UUIDSerializer

# Bind the functions to the framework
spring.cloud.function.definition=handleRoundStarted;handleRoundEnded;handleRoundCreated;\
                                 \
                                 produceGameCreated;produceGameStarted;produceGameEnded;\
                                 \
                                 handleLobbyCreated; \
                                 \
                                 produceCardSetRequest; \
                                 \
                                 handleCardSet;


# Bind the functions with their input/output to the topic
spring.cloud.stream.bindings.handleRoundStarted-in-0.destination=round-started-topic
spring.cloud.stream.bindings.handleRoundEnded-in-0.destination=round-ended-topic
spring.cloud.stream.bindings.handleRoundCreated-in-0.destination=round-created-topic

spring.cloud.stream.bindings.produceGameCreated-out-0.destination=game-created-topic
spring.cloud.stream.bindings.produceGameStarted-out-0.destination=game-started-topic
spring.cloud.stream.bindings.produceGameEnded-out-0.destination=game-ended-topic

spring.cloud.stream.bindings.handleLobbyCreated-in-0.destination=lobby-created-topic

spring.cloud.stream.bindings.produceCardSetRequest-out-0.destination=card-set-request-topic
spring.cloud.stream.bindings.handleCardSet-in-0.destination=card-set-topic

